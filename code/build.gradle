apply plugin: "java"
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'resources'
        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

repositories {
    jcenter()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compile 'junit:junit:4.12'
    compile 'org.junit.jupiter:junit-jupiter-engine:5.0.0'
    compile 'org.junit.jupiter:junit-jupiter-params:5.0.0'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'

    testCompile 'junit:junit:4.12'
}

pmd {
    ignoreFailures = true
    toolVersion = '5.5.0'
    ruleSets = [
            //'java-android',
            'java-basic',
            'java-braces',
            'java-clone',
            'java-codesize',
            'java-comments',
            'java-controversial',
            'java-coupling',
            'java-design',
            'java-empty',
            'java-finalizers',
            'java-imports',
            //'java-j2ee',
            'java-javabeans',
            'java-junit',
            //'java-logging-jakarta-commons',
            //'java-logging-java',
            'java-migrating',
            'java-naming',
            'java-optimizations',
            'java-strictexception',
            'java-strings',
            //'java-sunsecure',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
    ]
}

findbugs {
    ignoreFailures = true
    effort = "max"
    reportLevel = "low"
}

checkstyle {
    toolVersion = "7.0"
    ignoreFailures = true
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

